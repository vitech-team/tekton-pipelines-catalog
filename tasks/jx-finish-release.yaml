apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: jx-finish-release
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "jx"
    tekton.dev/displayName: "jx-finish"
spec:
  description: >-
    Finish release
  workspaces:
    - name: source
      description: sources dir
  params:
    - description: git url to clone
      name: REPO_URL
      type: string
    - default: master
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: PULL_PULL_SHA
      type: string
    - description: the unique build number
      name: BUILD_ID
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: 'the kind of job: postsubmit or presubmit'
      name: JOB_TYPE
      type: string
    - default: master
      description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - name: SLACK_SECRET
      default: slack
      description: slack secret name
    - name: SLACK_CHANEL
      default: "#none"
      description: slack chanel to notify about release
  stepTemplate:
    env:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
  steps:
    - name: promote-changelog
      image: gcr.io/jenkinsxio/jx-changelog:0.0.8
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
        git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
        git config --global credential.helper store

        source /workspace/source/.jx/variables.sh
        if [ -d "/workspace/source/charts/$REPO_NAME" ]; then
          sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
          sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
          sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
        else
          echo no charts;
        fi
        git commit -a -m "release $VERSION" --allow-empty
        git tag -fa v$VERSION -m "Release version $VERSION"
        git push origin v$VERSION
        jx changelog create --version v${VERSION}
    - name: promote-helm-release
      image: gcr.io/jenkinsxio/jx-cli:3.1.43
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        jx gitops helm release
    - name: promote-jx-promote
      image: gcr.io/jenkinsxio/jx-cli:3.1.43
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        source /workspace/source/.jx/variables.sh
        jx promote -b --all-auto --timeout 1h --no-poll &> promote.log
        cat promote.log
    - name: slack-notify
      image: gcr.io/jenkinsxio/jx-cli:3.1.43
      imagePullPolicy: IfNotPresent
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        source /workspace/source/.jx/variables.sh

        export PR_URL=$(cat promote.log | grep "Created Pull Request" | grep -Eo '(http|https).+')
        export REPO_TAG_URL="https://github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)/tree/v${VERSION}"
        export DOCKER_IMAGE_URL="https://$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION"
        export CHANGE_LOG_URL="https://github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)/releases/tag/v${VERSION}"

        eval "cat <<EOF
        $SLACK_MESSAGE_TMPL
        EOF
        " >rpl.json
        export MESSAGE=$(cat rpl.json)
        curl -X POST -H 'Content-type: application/json' -H "Authorization: Bearer $SLACK_TOKEN" --data "$MESSAGE" https://slack.com/api/chat.postMessage
      env:
        - name: SLACK_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.SLACK_SECRET)
              key: SLACK_TOKEN
        - name: SLACK_CHANEL
          value: "$(params.SLACK_CHANEL)"
        - name: SLACK_MESSAGE_TMPL
          value: |
            {
              "channel": "${SLACK_CHANEL}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":tada: Application \`${APP_NAME}\` of version \`${VERSION}\` has been packed. \n Application will be *autopromoted* on *staging* environment _soon_, see created <${PR_URL}|pull request>."
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":nyancat: Promote PR",
                        "emoji": true
                      },
                      "value": "click_me_123",
                      "url": "${PR_URL}",
                      "action_id": "pr"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":octocat: Repository Tag",
                        "emoji": true
                      },
                      "value": "click_me_123",
                      "url": "${REPO_TAG_URL}",
                      "action_id": "repo"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":potato: Change Log",
                        "emoji": true
                      },
                      "value": "click_me_123",
                      "url": "${CHANGE_LOG_URL}",
                      "action_id": "changelog"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":whale: Docker Image",
                        "emoji": true
                      },
                      "value": "click_me_123",
                      "url": "${DOCKER_IMAGE_URL}",
                      "action_id": "dockerImage"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "<https://vitech-team.github.io/SDLC|VITech SDLC Team>"
                    },
                    {
                      "type": "image",
                      "image_url": "https://static2.clutch.co/s3fs-public/logos/cf05ec722c2e35d3158c03924a09dd2e.png",
                      "alt_text": "VItech SDLC"
                    }
                  ]
                }
              ]
            }
