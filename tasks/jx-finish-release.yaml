apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: jx-finish-release
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "jx"
    tekton.dev/displayName: "jx-finish"
spec:
  description: >-
    Finish release
  workspaces:
    - name: source
      description: sources dir
  params:
    - description: git url to clone
      name: REPO_URL
      type: string
    - default: master
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: PULL_PULL_SHA
      type: string
    - description: the unique build number
      name: BUILD_ID
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: 'the kind of job: postsubmit or presubmit'
      name: JOB_TYPE
      type: string
    - default: master
      description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - name: SLACK_SECRET
      default: slack
      description: slack secret name
  stepTemplate:
    env:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
  steps:

    - name: promote-changelog
      image: gcr.io/jenkinsxio/builder-go:2.1.142-761
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        source /workspace/source/.jx/variables.sh
        jx step changelog --version v${VERSION}

    - name: promote-helm-release
      image: gcr.io/jenkinsxio/jx-cli:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        jx gitops helm release

    - name: promote-jx-promote
      image: gcr.io/jenkinsxio/jx-cli:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        source /workspace/source/.jx/variables.sh
        jx promote -b --all-auto --timeout 1h --no-poll

    - name: slack-notification
      image: docker.io/curlimages/curl:7.68.0
      imagePullPolicy: IfNotPresent
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        source /workspace/source/.jx/variables.sh
        export MSG=$(echo "New Release: https://github.com/$REPO_OWNER/$REPO_NAME/releases/tag/v${VERSION}")
        /usr/bin/curl -X POST -H 'Content-type: application/json' -H 'Authorization: Bearer '$SLACK_TOKEN --data '{"channel":"$SLACK_CHANEL", "text":"$MSG"}' https://slack.com/api/chat.postMessage
      env:
        - name: SLACK_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.SLACK_SECRET)
              key: SLACK_TOKEN
        - name: SLACK_CHANEL
          value: sdlc-dev