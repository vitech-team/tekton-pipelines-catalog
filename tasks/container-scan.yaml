apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: container-scan
spec:
  description: |
    Runs an image scan with Trivy and Dockle fails the build if issues are found.
  workspaces:
    - name: source
      description: sources dir
  params:
    - name: image-url
      description: "image url"
    - name: scan-image
      description: Flag indicating that a scan should be performed
      default: "true"
    - name: TRIVY_IMAGE
      default: aquasec/trivy:0.15.0
    - name: TRIVY_CACHE_PVC
      default: trivy-cache
    - name: TRIVY_SEVERITY
      default: "CRITICAL"
    - name: DOCKLE_IMAGE
      default: goodwithtech/dockle:v0.3.1
    - name: DOCKLE_EXIT_LEVEL
      default: "warn"
    - name: PR_NUMBER
      type: string
      description: if comment with report should be published on VCS provider like GitHub
      default: ""
    - name: DOCKER_SOCKET_VOLUME
      type: string
      description: "Name of docker-socket volume to mount: /var/run/docker.sock"
      default: "docker-socket"
  stepTemplate:
    name: ""
    volumeMounts:
      - name: $(params.DOCKER_SOCKET_VOLUME)
        mountPath: /var/run/docker.sock
  volumes:
    - name: $(params.TRIVY_CACHE_PVC)
      persistentVolumeClaim:
        claimName: trivy
  results:
    - name: dockle-result
      description: dockle execution result
    - name: trivy-result
      description: trivy execution result
  steps:
    - name: trivy-scan
      image: $(params.TRIVY_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        PERFORM_SCAN="$(params.scan-image)"
        if [[ "${PERFORM_SCAN}" == "false" ]] || [[ -z "${PERFORM_SCAN}" ]]; then
          echo "User selected to skip scanning. Skipping Trivy scan."
          exit 0
        fi

        if trivy --cache-dir="/.trivycache/" image   --no-progress --exit-code 1 --severity "$(params.TRIVY_SEVERITY)" -f json -o ".trivy-report.json" "$(params.image-url)" ; then
          echo "0" > $(results.trivy-result.path)
        else
          echo "1" > $(results.trivy-result.path)
        fi

        echo "Continue..."
      volumeMounts:
        - name: $(params.TRIVY_CACHE_PVC)
          mountPath: /.trivycache/

    - name: dockle-scan
      image: $(params.DOCKLE_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |

        PERFORM_SCAN="$(params.scan-image)"
        if [[ "${PERFORM_SCAN}" == "false" ]] || [[ -z "${PERFORM_SCAN}" ]]; then
          echo "User selected to skip scanning. Skipping Dockle scan."
          exit 0
        fi

        if dockle -f json -o ".dockle-report.json"  --exit-code 1 --exit-level "$(params.DOCKLE_EXIT_LEVEL)" "$(params.image-url)" ; then
          echo "0" > $(results.dockle-result.path)
        else
          echo "1" > $(results.dockle-result.path)
        fi

        echo "Continue..."

    - name: publish
      image: gcr.io/jenkinsxio/jx-boot:3.1.43
      workingDir: $(workspaces.source.path)
      script: |
        if [ -z "$(params.PR_NUMBER)" ]; then
            echo "No PR_NUMBER parameter provider, skipping comment."
          else
            if [ "$(cat $(results.dockle-result.path))" == "1" ]; then
              echo -e ":spider: [Dockle](https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md) found some issues. \n <details> \n\n \`\`\` \n $(cat .dockle-report.json) \n \`\`\` \n\n</details>" > .comment-dockle
              jx gitops pr comment --pr="$(params.PR_NUMBER)" --comment="$(cat .comment-dockle)"
            fi
            if [ "$(cat $(results.trivy-result.path))" == "1" ]; then
              echo -e ":spider: [Trivy](https://github.com/aquasecurity/trivy) found some security issues. \n <details> \n\n \`\`\`javascript \n $(cat .trivy-report.json) \n \`\`\` \n\n</details>" > .comment-trivy
              jx gitops pr comment --pr="$(params.PR_NUMBER)" --comment="$(cat .comment-trivy)"
            fi
        fi

    - name: finish
      image: $(params.DOCKLE_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        if [ "$(cat $(results.dockle-result.path))" == "1" ]; then
          echo "Dockle scanning completed. $(params.DOCKLE_EXIT_LEVEL) Vulnerabilities found."
          exit 1
        else
          echo "Dockle scanning completed. $(params.DOCKLE_EXIT_LEVEL) vulnerabilities not found."
        fi

        if [ "$(cat $(results.trivy-result.path))" == "1" ]; then
          echo "Trivy scanning completed. $(params.TRIVY_SEVERITY) Vulnerabilities found."
          exit 1
        else
          echo "Trivy scanning completed. $(params.TRIVY_SEVERITY) vulnerabilities not found."
        fi


